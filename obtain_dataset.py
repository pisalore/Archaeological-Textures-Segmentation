import os
import glob
import numpy as np

SEG_DIR = './data/seg_dir'
ALL_SEG_DIR = './data/all_seg_dir'
PTS_DIR = './data/pts_dir'
ALL_PTS_DIR = './data/all_pts_dir'
PLY_DIR = './data/ply_dir'
ALL_PLY_DIR = './data/all_ply_dir'

# steps for obtain 2048 points
steps_a = [0, 2048, 4096, 6144, 8192, 10240, 12288, 14336, 16384, 18432, 20480, 22528, 24576, 26624, 28672, 30720, 32768,
         34816, 36864, 38912, 40960, 43008, 45056, 47104, 49152, 51200, 53248, 55296, 57344, 59392, 61440, 63488, 65536,
         67584, 69632, 71680, 73728, 75776, 77824, 79872, 81920, 83968, 86016, 88064, 90112, 92160, 94208, 96256, 98304,
         100352, 102400]

# steps for obtain 1024 points
steps_b = [0, 1024, 2048, 3072, 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264, 12288, 13312, 14336, 15360, 16384,
        17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672, 29696, 30720, 31744, 32768,
        33792, 34816, 35840, 36864, 37888, 38912, 39936, 40960, 41984, 43008, 44032, 45056, 46080, 47104, 48128, 49152,
        50176, 51200, 52224, 53248, 54272, 55296, 56320, 57344, 58368, 59392, 60416, 61440, 62464, 63488, 64512, 65536,
        66560, 67584, 68608, 69632, 70656, 71680, 72704, 73728, 74752, 75776, 76800, 77824, 78848,  79872, 80896, 81920,
        82944, 83968, 84992, 86016, 87040, 88064, 89088, 90112, 91136, 92160, 93184, 94208, 95232, 96256, 97280, 98304,
        99328, 100352, 101376, 102400]

# steps for obtain 512 points
steps_c = [0, 512, 1024, 1536, 2048, 2560, 3072, 3584, 4096, 4608, 5120, 5632, 6144, 6656, 7168, 7680, 8192, 8704,
           9216, 9728, 10240, 10752, 11264, 11776, 12288, 12800, 13312, 13824, 14336, 14848, 15360, 15872, 16384, 16896,
           17408, 17920, 18432, 18944, 19456, 19968, 20480, 20992, 21504, 22016, 22528, 23040, 23552, 24064, 24576, 25088,
           25600, 26112, 26624, 27136, 27648, 28160, 28672, 29184, 29696, 30208, 30720, 31232, 31744, 32256, 32768, 33280,
           33792, 34304, 34816, 35328, 35840, 36352, 36864, 37376, 37888, 38400, 38912, 39424, 39936, 40448, 40960, 41472,
           41984, 42496, 43008, 43520, 44032, 44544, 45056, 45568, 46080, 46592, 47104, 47616, 48128, 48640, 49152, 49664,
           50176, 50688, 51200, 51712, 52224, 52736, 53248, 53760, 54272, 54784, 55296, 55808, 56320, 56832, 57344, 57856,
           58368, 58880, 59392, 59904, 60416, 60928, 61440, 61952, 62464, 62976, 63488, 64000, 64512, 65024, 65536, 66048,
           66560, 67072, 67584, 68096, 68608, 69120, 69632, 70144, 70656, 71168, 71680, 72192, 72704, 73216, 73728, 74240,
           74752, 75264, 75776, 76288, 76800, 77312, 77824, 78336, 78848, 79360, 79872, 80384, 80896, 81408, 81920, 82432,
           82944, 83456, 83968, 84480, 84992, 85504, 86016, 86528, 87040, 87552, 88064, 88576, 89088, 89600, 90112, 90624,
           91136, 91648, 92160, 92672, 93184, 93696, 94208, 94720, 95232, 95744, 96256, 96768, 97280, 97792, 98304, 98816,
           99328, 99840, 100352, 100864, 101376, 101888, 102400]

# steps for obtain 256 points
steps_d = [0, 256, 512, 768, 1024, 1280, 1536, 1792, 2048, 2304, 2560, 2816, 3072, 3328, 3584, 3840, 4096, 4352, 4608,
           4864, 5120, 5376, 5632, 5888, 6144, 6400, 6656, 6912, 7168, 7424, 7680, 7936, 8192, 8448, 8704, 8960, 9216,
           9472, 9728, 9984, 10240, 10496, 10752, 11008, 11264, 11520, 11776, 12032, 12288, 12544, 12800, 13056, 13312,
           13568, 13824, 14080, 14336, 14592, 14848, 15104, 15360, 15616, 15872, 16128, 16384, 16640, 16896, 17152, 17408,
           17664, 17920, 18176, 18432, 18688, 18944, 19200, 19456, 19712, 19968, 20224, 20480, 20736, 20992, 21248, 21504,
           21760, 22016, 22272, 22528, 22784, 23040, 23296, 23552, 23808, 24064, 24320, 24576, 24832, 25088, 25344, 25600,
           25856, 26112, 26368, 26624, 26880, 27136, 27392, 27648, 27904, 28160, 28416, 28672, 28928, 29184, 29440, 29696,
           29952, 30208, 30464, 30720, 30976, 31232, 31488, 31744, 32000, 32256, 32512, 32768, 33024, 33280, 33536, 33792,
           34048, 34304, 34560, 34816, 35072, 35328, 35584, 35840, 36096, 36352, 36608, 36864, 37120, 37376, 37632, 37888,
           38144, 38400, 38656, 38912, 39168, 39424, 39680, 39936, 40192, 40448, 40704, 40960, 41216, 41472, 41728, 41984,
           42240, 42496, 42752, 43008, 43264, 43520, 43776, 44032, 44288, 44544, 44800, 45056, 45312, 45568, 45824, 46080,
           46336, 46592, 46848, 47104, 47360, 47616, 47872, 48128, 48384, 48640, 48896, 49152, 49408, 49664, 49920, 50176,
           50432, 50688, 50944, 51200, 51456, 51712, 51968, 52224, 52480, 52736, 52992, 53248, 53504, 53760, 54016, 54272,
           54528, 54784, 55040, 55296, 55552, 55808, 56064, 56320, 56576, 56832, 57088, 57344, 57600, 57856, 58112, 58368,
           58624, 58880, 59136, 59392, 59648, 59904, 60160, 60416, 60672, 60928, 61184, 61440, 61696, 61952, 62208, 62464,
           62720, 62976, 63232, 63488, 63744, 64000, 64256, 64512, 64768, 65024, 65280, 65536, 65792, 66048, 66304, 66560,
           66816, 67072, 67328, 67584, 67840, 68096, 68352, 68608, 68864, 69120, 69376, 69632, 69888, 70144, 70400, 70656,
           70912, 71168, 71424, 71680, 71936, 72192, 72448, 72704, 72960, 73216, 73472, 73728, 73984, 74240, 74496, 74752,
           75008, 75264, 75520, 75776, 76032, 76288, 76544, 76800, 77056, 77312, 77568, 77824, 78080, 78336, 78592, 78848,
           79104, 79360, 79616, 79872, 80128, 80384, 80640, 80896, 81152, 81408, 81664, 81920, 82176, 82432, 82688, 82944,
           83200, 83456, 83712, 83968, 84224, 84480, 84736, 84992, 85248, 85504, 85760, 86016, 86272, 86528, 86784, 87040,
           87296, 87552, 87808, 88064, 88320, 88576, 88832, 89088, 89344, 89600, 89856, 90112, 90368, 90624, 90880, 91136,
           91392, 91648, 91904, 92160, 92416, 92672, 92928, 93184, 93440, 93696, 93952, 94208, 94464, 94720, 94976, 95232,
           95488, 95744, 96000, 96256, 96512, 96768, 97024, 97280, 97536, 97792, 98048, 98304, 98560, 98816, 99072, 99328,
           99584, 99840, 100096, 100352, 100608, 100864, 101120, 101376, 101632, 101888, 102144, 102400]

print('Obtaining dataset... \n')

if not os.path.exists(SEG_DIR):
    os.mkdir(SEG_DIR)
    for line in open(ALL_SEG_DIR +'/seg_filelist.txt'):
        print(line)
        file_name = line.split('.')[0]
        file_lenght = int(line.split()[1])
        file_number = int(file_lenght / 512)
        print('Obtaining ', file_number, 'files...')

        for i in range(0, file_number):
            #print(file_name + '_' + str(i))
            f = open(SEG_DIR + '/' + file_name + '_' + str(i) + '.seg', 'a')
            file_to_copy = open(ALL_SEG_DIR + '/' + line.split()[0], 'r').readlines()
            for j in range(steps_c[i], steps_c[i + 1]):
                f.write(file_to_copy[j])
    print('.seg files obtained. \n')
else:
    print('SEG DIR already exists.')

if not os.path.exists(PTS_DIR):
    os.mkdir(PTS_DIR)
    for line in open(ALL_PTS_DIR +'/pts_filelist.txt'):
        print(line)
        file_name = line.split('.')[0]
        file_lenght = int(line.split()[1])
        file_number = int(file_lenght / 512)
        print('Obtaining ', file_number, 'files...')

        for i in range(0, file_number):
            #print(file_name + '_' + str(i))
            f = open(PTS_DIR + '/' + file_name + '_' + str(i) + '.pts', 'a')
            file_to_copy = open(ALL_PTS_DIR + '/' + line.split()[0], 'r').readlines()
            for j in range(steps_c[i], steps_c[i + 1]):
                f.write(file_to_copy[j])
    print('.pts files obtained. \n')
else:
    print('PTS DIR already exists.')

if not os.path.exists(PLY_DIR):
    os.mkdir(PLY_DIR)
    for line in open(ALL_PLY_DIR +'/ply_filelist.txt'):
        print(line)
        file_name = line.split('.')[0]
        file_lenght = int(line.split()[1])
        file_number = int(file_lenght / 512)
        print('Obtaining ', file_number, 'files...')

        for i in range(0, file_number):
            #print(file_name + '_' + str(i))
            f = open(PLY_DIR + '/' + file_name + '_' + str(i) + '.ply', 'a')
            header = "ply\nformat ascii 1.0\ncomment VCGLIB generated\nelement vertex " + str(512) + \
                     "\nproperty float x\nproperty float y\nproperty float z\nelement " \
                     "face 0\nproperty list uchar int vertex_indices\nend_header\n"
            f.write(header)
            file_to_copy = open(ALL_PLY_DIR + '/' + line.split()[0], 'r').readlines()
            for j in range(steps_c[i] + 10, steps_c[i + 1] + 10):
                f.write(file_to_copy[j])
    print('.ply files obtained. \n')
else:
    print('PLY DIR already exists.')


FILES = './data/pts_dir'

if not os.path.exists('filelist.txt'):
    print('Writing filelist...\n')
    f = open('./data/filelist.txt', 'a')

    for path_file in glob.glob(os.path.join(FILES, '*.pts')):
        file = os.path.basename(path_file)
        file_name = str(file.split('.')[0])
        f.write(file_name + '\n')
    print('Filelist created.')
else:
    print('filelist.txt already exists.')


